export declare class SQObject {
    private e;
    constructor(obj: any);
    get(): any;
    create(tagName: any): any;
    createFirst(tagName: any): SQObject;
    add(tagName: any): this;
    text(text?: any, append?: any): any;
    id(id?: any): any;
    val(value?: any): any;
    value(value?: any): any;
    append(obj: any): any;
    appendTo(target: any): this;
    insertFirst(obj: any): this;
    replace(obj: any): this;
    addClass(className: any): this;
    removeClass(className: any): this;
    toggleClass(className: any): this;
    hasClass(className: any): any;
    attr(attr: any, value: any): any;
    prop(prop: any, value?: any): this;
    style(prop: any, value?: any): any;
    ds(prop: string | object, value?: any): any;
    removeDs(prop: any): this;
    query(selector: any): any;
    queryAll(selector: any): any;
    children(): unknown[];
    parent(): any;
    q(selector: any): SQObject;
    childs(): any[];
    contains(elem: any): any;
    remove(): void;
    on(_event: any, _function: any): this;
    off(_event: any, _function: any): this;
    fire(_event: any): boolean;
}
export declare let SQObject1: (obj: any) => void;
export declare const _sgQuery: {
    (obj?: any): SQObject;
    byId(id: any): false | HTMLElement;
    text(text: any): SQObject;
    create(opt: any): SQObject;
    prop(obj: any, prop: any): void;
    bind(fn: any, context: any, arg?: any): any;
    appendStyle(style: any): void;
    appendScript(script: any): void;
    query(selector: any): any;
    queryAll(selector: any): false | NodeListOf<any>;
    unSelect(): void;
};
